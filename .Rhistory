install.packages("shiny")
install.packages("flexdashboard")
install.packages("plotly")
install.packages("ggplot2")
install.packages("tidyverse")
install.packages("tinytex")
install.packages("rmarkdown")
install.packages("rmarkdown", dependencies = TRUE)
install.packages("tinytex", dependencies = TRUE)
install.packages("xfun")
install.packages("githubinstall")
devtools::install_github("yihui/xfun")
install.packages(
"https://github.com/yihui/xfun",
repos = NULL, type = "source"
)
install.packages("xfun")
library(flexdashboard); library(NHANES); library(plotly);library(dplyr)
install.packages("NHANES")
library(flexdashboard); library(NHANES); library(plotly);library(dplyr)
sliderInput("height", "Height in inches",0,100,72)
library(flexdashboard); library(NHANES); library(plotly);library(dplyr);library(shiny)
sliderInput("height", "Height in inches",0,100,72)
sliderInput("weight", "Weight in pounds",0,500,100)
sliderInput("age", "Age in years",0,120,50)
nhanes = sample_n(NHANES,100)
renderPlotly({
df = data.frame(bmi = c(nhanes$BMI,input$weight*0.45/(input$height*0.025)^2),
age = c(nhanes$Age,input$age),
who = c(rep("nhanes",100),"you"))
ggplotly(ggplot(df) +
geom_point(aes(x=age,y=bmi,color=who)) +
scale_x_continuous(limits=c(0,90)) +
scale_y_continuous(limits=c(0,60)) +
theme_minimal()
)
})
nhanes = sample_n(NHANES,100)
renderPlotly({
df = data.frame(bmi = c(nhanes$BMI,input$weight*0.45/(input$height*0.025)^2),
age = c(nhanes$Age,input$age),
who = c(rep("nhanes",100),"you"))
ggplotly(ggplot(df) +
geom_point(aes(x=age,y=bmi,color=who)) +
scale_x_continuous(limits=c(0,90)) +
scale_y_continuous(limits=c(0,60)) +
theme_minimal()
)
})
library(flexdashboard); library(NHANES); library(plotly);library(dplyr);library(shiny)
sliderInput("height", "Height in inches",0,100,72)
sliderInput("weight", "Weight in pounds",0,500,100)
sliderInput("age", "Age in years",0,120,50)
nhanes = sample_n(NHANES,100)
renderPlotly({
df = data.frame(bmi = c(nhanes$BMI,input$weight*0.45/(input$height*0.025)^2),
age = c(nhanes$Age,input$age),
who = c(rep("nhanes",100),"you"))
ggplotly(ggplot(df) +
geom_point(aes(x=age,y=bmi,color=who)) +
scale_x_continuous(limits=c(0,90)) +
scale_y_continuous(limits=c(0,60)) +
theme_minimal()
)
})
library(flexdashboard); library(NHANES); library(plotly);library(dplyr);library(shiny)
shiny::sliderInput("height", "Height in inches",0,100,72)
shiny::sliderInput("weight", "Weight in pounds",0,500,100)
sliderInputshiny::sliderInput("age", "Age in years",0,120,50)
library(flexdashboard); library(NHANES); library(plotly);library(dplyr);library(shiny)
shiny::sliderInput("height", "Height in inches",0,100,72)
shiny::sliderInput("weight", "Weight in pounds",0,500,100)
shiny::sliderInput("age", "Age in years",0,120,50)
nhanes = sample_n(NHANES,100)
renderPlotly({
df = data.frame(bmi = c(nhanes$BMI,input$weight*0.45/(input$height*0.025)^2),
age = c(nhanes$Age,input$age),
who = c(rep("nhanes",100),"you"))
ggplotly(ggplot(df) +
geom_point(aes(x=age,y=bmi,color=who)) +
scale_x_continuous(limits=c(0,90)) +
scale_y_continuous(limits=c(0,60)) +
theme_minimal()
)
})
library(flexdashboard); library(NHANES); library(plotly);library(dplyr);library(shiny)
shiny::sliderInput("height", "Height in inches",0,100,72)
shiny::sliderInput("weight", "Weight in pounds",0,500,100)
shiny::sliderInput("age", "Age in years",0,120,50)
library(flexdashboard); library(NHANES); library(plotly);library(dplyr);library(shiny)
library(flexdashboard); library(NHANES); library(plotly);library(dplyr);library(shiny)
sliderInput("height", "Height in inches",0,100,72)
sliderInput("weight", "Weight in pounds",0,500,100)
sliderInput("age", "Age in years",0,120,50)
library(tidyverse)
df = data.frame(f=seq(0.01,1,0.01))
View(df)
1.82/0
1.82/0.47
df = df %>% mutate(Expected_return = ((1+3.87*2*f)**10)*
((1+3.87*f-f)**10)*
((1-f+3.87*f)**10)*
((1-2*f)**10))
View(df)
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
df = df %>% mutate(Expected_return = ((1+3.87*2*f)**10)*
((1+3.87*f-f)**10)*
((1-f+3.87*f)**10)*
((1-2*f)**10)**10)
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
df = df %>% mutate(Expected_return = ((1+2*2*f)**10)*
((1+2*f-f)**10)*
((1-f+2*f)**10)*
((1-2*f)**10)**10)
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
df = df %>% mutate(Expected_return = ((1+2*2*f)**10)*
((1+2*f-f)**10)*
((1-f+2*f)**10)*
((1-2*f)**10))
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
f
View(df)
df = df %>% mutate(Expected_return = ((1+2*2*f)**10)*((1+2*f-f)**10)*((1-f+2*f)**10)*((1-2*f)**10))
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
df = df %>% mutate(Expected_return = ((1+4*f)**10)*((1+f)**10)*((1+f)**10)*((1-2*f)**10))
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
df = df %>% mutate(Expected_return = ((1+4*f)**9)*((1+f)**9)*((1+f)**9)*((1-2*f)**9))
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
df = df %>% mutate(Expected_return = ((1+4*f)**10)*((1+f)**10)*((1+f)**10)*((1-2*f)**10))
df = data.frame(f=seq(0.01,0.5,0.01))
df = df %>% mutate(Expected_return = ((1+4*f)**10)*((1+f)**10)*((1+f)**10)*((1-2*f)**10))
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
47%*47%
0.47*0.47
0
0.53*0.53
df = data.frame(f=seq(0.01,0.5,0.01))
df = df %>% mutate(Expected_return = ((1+2*3.87*f)**22)*((1+3.87*f-f)**25)*((1+3.87*f-f)**25)*((1-2*f)**28))
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
0.47**2
0.47**3
0.53**3
3*(0.47**2)*0.53
3*(0.53**2)*0.47
0.351231+0.396069+0.103823+0.148877
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
df2 = data.frame(f=seq(0.01,0.33,0.01))
df2 = df2 %>% mutate(Expected_return = ((1+3*3.87*f)**10)*((1+2*3.87*f-f)**35)*((1+3.87*f-2*f)**40)*((1-2*f)**15))
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
df = data.frame(f=seq(0.01,0.5,0.01))
df = df %>% mutate(Expected_return = ((1+2*3.87*f)**22)*((1+3.87*f-f)**25)*((1+3.87*f-f)**25)*((1-2*f)**28))
df2 = data.frame(f=seq(0.01,0.33,0.01))
df2 = df2 %>% mutate(Expected_return = ((1+3*3.87*f)**10)*((1+2*3.87*f-f)**35)*((1+3.87*f-2*f)**40)*((1-2*f)**15))
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
View(df2)
df2 = df2 %>% mutate(Expected_return = ((1+3*3.87*f)**10)*((1+2*3.87*f-f)**35)*((1+3.87*f-2*f)**40)*((1-3*f)**15))
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
View(df2)
rm(list= ls());gc()
df2 = data.frame(f=seq(0.01,0.33,0.01))
df2 = df2 %>% mutate(Expected_return = ((1+3*3.87*f)**10)*((1+2*3.87*f-f)**35)*((1+3.87*f-2*f)**40)*((1-3*f)**15))
ggplot(data = df2, aes(x= f,y = Expected_return))+geom_line()
View(df2)
rm(list= ls());gc()
library(tidyverse)
library(ggplot2)
df = data.frame(f=seq(0.01,0.5,0.01))
df = df %>% mutate(Expected_return = ((1+2*3.87*f)**22)*((1+3.87*f-f)**25)*((1+3.87*f-f)**25)*((1-2*f)**28))
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()+
ggtitle('Invest in two assets')+labs(x='Size of bet', y= 'Expected Return of 100 bets')
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()+
ggtitle('Invest in two assets')+labs(x='Size of bet', y= 'Expected Return of 100 bets')+vline(x = 0.29)
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()+
ggtitle('Invest in two assets')+labs(x='Size of bet', y= 'Expected Return of 100 bets')+geom_vline(x = 0.29)
df2 = data.frame(f=seq(0.01,0.33,0.01))
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()+
ggtitle('Invest in two assets')+labs(x='Size of bet', y= 'Expected Return of 100 bets')+geom_vline(0.29)
?geom_vline
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()+
ggtitle('Invest in two assets')+labs(x='Size of bet', y= 'Expected Return of 100 bets')+geom_vline(xintercept =  0.29)
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()+
ggtitle('Invest in two assets')+labs(x='Size of bet', y= 'Expected Return of 100 bets')+geom_vline(xintercept =  0.29,col = 'Red')
ggplot(data = df, aes(x= f,y = Expected_return))+geom_line()+
ggtitle('Invest in two assets')+labs(x='Size of bet', y= 'Expected Return of 100 bets')+
geom_vline(xintercept =  0.29,col = 'Red')+theme_bw()
df2 = data.frame(f=seq(0.01,0.33,0.01))
df2 = df2 %>% mutate(Expected_return = ((1+3*3.87*f)**10)*((1+2*3.87*f-f)**35)*((1+3.87*f-2*f)**40)*((1-3*f)**15))
ggplot(data = df2, aes(x= f,y = Expected_return))+geom_line()+
ggtitle('Invest in three assets')+labs(x='Size of bet', y= 'Expected Return of 100 bets')+
geom_vline(xintercept =  0.25,col = 'Red')+theme_bw()
install.packages("Rserve")
upgrade.packages("Rserve")
update.packages("Rserve")
Rserve()
library(Rserve)
Rserve()
library(Rserve)
Rserve()
remove.packages("Rserve", lib="~/R/win-library/4.1")
install.packages("Rserve")
library(Rserve)
Rserve()
library(reticulate)
?use_virtualenv
library(Rserve)
Rserve())
Rserve()
remove.packages("Rserve", lib="~/R/win-library/4.1")
install.packages("Rserve")
Rserve()
library(Rserve)
Rserve()
setwd("C:/Users/Admin/Desktop/FR_learning/vocab_app")
rm(list = ls());gc()
library(tidyverse)
library(lubridate)
library(data.table)
library(stringr)
df = fread("FR_vocab - Copie.csv",data.table = F)
View(df)
df = df %>% filter(EN!=="")
df = df %>% filter(EN!="")
View(df)
df = fread("FR_vocab - Copie.csv",data.table = F, encoding = 'utf-8')
df = fread("FR_vocab - Copie.csv",data.table = F, encoding = 'UTF-8')
df[10547,2]
df = df %>% filter(EN!="")
View(df)
df = fread("FR_vocab - Copie.csv",data.table = F, encoding = 'UTF-8')
df = df %>% filter(EN!="")
?sort
df =df %>% sort(stage, decreasing = T )%>% sort(etoile, decreasing = T )
df =df[order(-etoile,-stage)]
df =df[order(-etoile,-stage),]
?arrange
df =df %>% arrange(desc(etoile))%>% arrange(desc(stage))
View(df)
df = df %>% group_by(FR,EN) %>% slice(1)
View(df)
write.csv(df,'test.csv')
write.csv(df,'test.csv',sep = ';')
write_csv(df,'test.csv')
write_csv(df,'test.csv',sep = ";")
?write_csv
write.csv(df,'test.csv', row.names = FALSE)
write.csv2(df,'test.csv', row.names = FALSE)
setwd("C:/Users/Admin/Desktop/FR_learning/vocab_app")
rm(list = ls());gc()
library(tidyverse)
library(lubridate)
library(data.table)
library(stringr)
df = fread("FR_vocab - Copie.csv",data.table = F, encoding = 'UTF-8')
df = df %>% filter(EN!="")
df =df %>% arrange(desc(etoile))%>% arrange(desc(stage))
df = df %>% group_by(FR,EN) %>% slice(1)
write.csv2(df,'test.csv', row.names = FALSE)
setwd("C:/Users/Admin/Desktop/FR_learning/vocab_app")
rm(list = ls());gc()
library(tidyverse)
library(lubridate)
library(data.table)
library(stringr)
df = fread("FR_vocab - Copie.csv",data.table = F, encoding = 'UTF-8')
df = df %>% filter(EN!="")
df =df %>% arrange(desc(etoile))%>% arrange(desc(stage))
df = df %>% group_by(FR,EN) %>% slice(1)
write.csv2(df,'test.csv', row.names = FALSE)
